---
- hosts: national_omero
  vars:
    geoip_country_sha256_url: "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=L5ge93EmC4ww26Hp&suffix=tar.gz.sha256"
    geo_country_checksum_line: "{{ lookup('url', geoip_country_sha256_url) }}"
    geo_country_checksum:  "sha256:{{ geo_country_checksum_line.split(' ')[0] }}"
    geoip_city_sha256_url: "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=L5ge93EmC4ww26Hp&suffix=tar.gz.sha256"
    geo_city_checksum_line: "{{ lookup('url', geoip_city_sha256_url) }}"
    geo_city_checksum: "sha256:{{ geo_city_checksum_line.split(' ')[0] }}"
  tasks:

    - name: install mmdb reader repository
      become: true
      apt_repository:
        repo: ppa:maxmind/ppa

    - name: install C library for reading MaxMind DB files
      become: true
      apt:
        update_cache: true
        name: ['libmaxminddb0', 'libmaxminddb-dev', 'mmdb-bin']
    

    - name: copy ngx_http_geoip2_module.so to server
      become: true
      copy:
        src: ngx_http_geoip2_module.so
        dest: /usr/lib/nginx/modules/
        group: root
        owner: root
        mode: 0644
          
    - name: edit nginx.conf to load ngx_http_geoip2_module.so
      become: true
      lineinfile:
        path: /etc/nginx/nginx.conf
        line: load_module modules/ngx_http_geoip2_module.so;
        insertbefore: 'events {'
    
    - name: edit nginx.conf to map variables to mmdb data
      become: true
      blockinfile:
        path: /etc/nginx/nginx.conf
        insertbefore: 'sendfile on;'
        block: |
          geoip2 /etc/geolite/GeoLite2-Country.mmdb {
          auto_reload 5m;
          $geoip2_metadata_country_build metadata build_epoch;
          $geoip2_data_country_code country iso_code;
          $geoip2_data_country_name country names en;
          }
          geoip2 /etc/geolite/GeoLite2-City.mmdb {
          $geoip2_data_city_name city names en;
          }

    - name: create directory for the geolite databases
      become: true
      file:
        state: directory
        path: /etc/geolite
        mode: 0755
        owner: root
        group: root
    
      
    - name: Downloading the latest GeoIP Country Database and comparing it to checksum
      get_url:
        url: 'https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=L5ge93EmC4ww26Hp&suffix=tar.gz'
        dest: /tmp/
        mode: 0644
        checksum: "{{ geo_country_checksum}}"
      register: return_values

    - name: set facts return_values
      set_fact:
        filename: "{{ return_values.dest.split('/')[2] }}"
    
    - name: split filename
      set_fact:
        directory_name: "{{ filename.split('.')[0] }}"
    
    - name: make basenmae
      set_fact:     
        file_base: "{{ directory_name.split('_')[0] }}"   
       
    - name: Unarchive the file
      unarchive:
        remote_src: yes
        dest: /tmp/
        src: "{{ return_values.dest }}"
   
    - name: copy the database to /etc/geolite/
      become: true
      copy:
        remote_src: true
        src: "{{ '/tmp/' + directory_name + '/' + file_base + '.mmdb' }}"
        dest: /etc/geolite/
    
    - name: Downloading the latest GeoIP CITY Database and comparing it to checksum
      get_url:
        url: 'https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=L5ge93EmC4ww26Hp&suffix=tar.gz'
        dest: /tmp/
        mode: 0644
        checksum: "{{ geo_city_checksum}}"
      register: city

    - name: set facts return_values
      set_fact:
        cityfile: "{{ city.dest.split('/')[2] }}"
    
    - name: split filename
      set_fact:
        city_directory: "{{ cityfile.split('.')[0] }}"
    
    - name: make basenmae
      set_fact:     
        city_base: "{{ city_directory.split('_')[0] }}"   
       
    - name: Unarchive the file
      unarchive:
        remote_src: yes
        dest: /tmp/
        src: "{{ city.dest }}"
   
    - name: copy the database to /etc/geolite/
      become: true
      copy:
        remote_src: true
        src: "{{ '/tmp/' + city_directory + '/' + city_base + '.mmdb' }}"
        dest: /etc/geolite/

    - name: Copy GeoIP.conf to server
      become: true
      copy:
        src: GeoIP.conf
        dest: /etc/geolite/

    - name: install geoipupdate in cron.weekly
      become: true
      copy:
        src: geoipupdate
        dest: /etc/cron.weekly/
         

             
                            
         
          
          
          
          
